//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sandbox.Console.PunClient.WCFPunService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFPunService.IPunService")]
    public interface IPunService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPunService/GetPuns", ReplyAction="http://tempuri.org/IPunService/GetPunsResponse")]
        Sandbox.Data.Pun[] GetPuns();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPunService/GetPuns", ReplyAction="http://tempuri.org/IPunService/GetPunsResponse")]
        System.Threading.Tasks.Task<Sandbox.Data.Pun[]> GetPunsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPunService/GetPunById", ReplyAction="http://tempuri.org/IPunService/GetPunByIdResponse")]
        Sandbox.Data.Pun GetPunById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPunService/GetPunById", ReplyAction="http://tempuri.org/IPunService/GetPunByIdResponse")]
        System.Threading.Tasks.Task<Sandbox.Data.Pun> GetPunByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPunService/CreatePun", ReplyAction="http://tempuri.org/IPunService/CreatePunResponse")]
        void CreatePun(Sandbox.Data.Pun pun);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPunService/CreatePun", ReplyAction="http://tempuri.org/IPunService/CreatePunResponse")]
        System.Threading.Tasks.Task CreatePunAsync(Sandbox.Data.Pun pun);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPunService/UpdatePun", ReplyAction="http://tempuri.org/IPunService/UpdatePunResponse")]
        void UpdatePun(Sandbox.Data.Pun pun);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPunService/UpdatePun", ReplyAction="http://tempuri.org/IPunService/UpdatePunResponse")]
        System.Threading.Tasks.Task UpdatePunAsync(Sandbox.Data.Pun pun);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPunService/DeletePun", ReplyAction="http://tempuri.org/IPunService/DeletePunResponse")]
        void DeletePun(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPunService/DeletePun", ReplyAction="http://tempuri.org/IPunService/DeletePunResponse")]
        System.Threading.Tasks.Task DeletePunAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPunServiceChannel : Sandbox.Console.PunClient.WCFPunService.IPunService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PunServiceClient : System.ServiceModel.ClientBase<Sandbox.Console.PunClient.WCFPunService.IPunService>, Sandbox.Console.PunClient.WCFPunService.IPunService {
        
        public PunServiceClient() {
        }
        
        public PunServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PunServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PunServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PunServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Sandbox.Data.Pun[] GetPuns() {
            return base.Channel.GetPuns();
        }
        
        public System.Threading.Tasks.Task<Sandbox.Data.Pun[]> GetPunsAsync() {
            return base.Channel.GetPunsAsync();
        }
        
        public Sandbox.Data.Pun GetPunById(int id) {
            return base.Channel.GetPunById(id);
        }
        
        public System.Threading.Tasks.Task<Sandbox.Data.Pun> GetPunByIdAsync(int id) {
            return base.Channel.GetPunByIdAsync(id);
        }
        
        public void CreatePun(Sandbox.Data.Pun pun) {
            base.Channel.CreatePun(pun);
        }
        
        public System.Threading.Tasks.Task CreatePunAsync(Sandbox.Data.Pun pun) {
            return base.Channel.CreatePunAsync(pun);
        }
        
        public void UpdatePun(Sandbox.Data.Pun pun) {
            base.Channel.UpdatePun(pun);
        }
        
        public System.Threading.Tasks.Task UpdatePunAsync(Sandbox.Data.Pun pun) {
            return base.Channel.UpdatePunAsync(pun);
        }
        
        public void DeletePun(int id) {
            base.Channel.DeletePun(id);
        }
        
        public System.Threading.Tasks.Task DeletePunAsync(int id) {
            return base.Channel.DeletePunAsync(id);
        }
    }
}
